<!DOCTYPE html>
<html lang="en">
<head>
    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
    <link href="//netdna.bootstrapcdn.com/bootstrap/2.3.2/css/bootstrap.min.css" rel="stylesheet"/>
    <link href="/assets/css/style.css" rel="stylesheet"/>

    <title>{% block title %}Drupal Release Date{% endblock %}</title>

    <meta name="description" content="{% block  metaDescription %}Progress and estimated release date for the next version of Drupal{% endblock %}"/>
    <link rel="icon" type="image/png" href="/assets/images/favicon.png" />

    <script type="text/javascript" src="//code.jquery.com/jquery-3.1.0.min.js"></script>
    {% include('googleanalytics.twig') %}
    {% if scripts is defined %}
        {% for script in scripts %}
            <script type="text/javascript" src="{{ script }}"></script>
        {% endfor %}
    {% endif %}
</head>
<body>
<div class="container">
    <div role="main">
        {% block content %}
        {% endblock %}
    </div>

    <footer>
        {#
        <div role="navigation">
            <ul class="nav">
                <li><a href="/chart/samples">Samples Chart</a></li>
                <li><a href="/chart/estimates">Estimates Chart</a></li>
            </ul>
            <ul class="nav">
                <li><a href="/">Home</a></li>
                <li><a href="/about">About</a></li>
            </ul>
        </div>
        #}

        <div class="credits" role="contentinfo">
            <div>
                <a href="https://twitter.com/DrupalReleaseDt" data-type="twitter">@DrupalReleaseDt</a>
            </div>
            <div>
                Built by <a href="https://drupal.org/user/490940" data-type="drupal">gapple</a>
                <span role="presentation">|</span>
                On twitter <a href="https://twitter.com/gappleca" data-type="twitter">@gappleca</a>
            </div>
            <div>
                <a href="https://github.com/gapple/drupalreleasedate" data-type="github">
                    <span class="hidden-desktop">Fork me on Github</span>
                    <img class="visible-desktop" style="position: absolute; top: 0; right: 0; border: 0;" src="https://s3.amazonaws.com/github/ribbons/forkme_right_gray_6d6d6d.png" alt="Fork me on GitHub"/>
                </a>
            </div>
        </div>
    </footer>
</div>
<script type="text/javascript">
    var Timing = (function () {
        var timings = {};

        var timingObject = {
            /**
             * Start a timer with the provided key.
             *
             * If a timer with the provided key already exists, it is overwritten.
             *
             * @param key
             */
            start: function (key) {
                timings[key] = {
                    start: new Date(),
                    elapsed: 0
                };
            },
            /**
             * End the timer with the provided key, if it exists and is still running.
             *
             * @param key
             */
            stop: function (key) {
                if (typeof timings[key] === 'undefined' || typeof timings[key].start === 'undefined') {
                    return;
                }

                timings[key].elapsed += (new Date()).getTime() - timings[key].start.getTime();
                delete timings[key].start;
            },
            /**
             * Continue a timer with the provided key.
             *
             * If the timer is still running, this has no effect.
             *
             * @param key
             */
            continue: function (key) {
                if (typeof timings[key] === 'undefined' || typeof timings[key].start !== 'undefined') {
                    return;
                }
                timings[key].start = new Date();
            },
            /**
             * Get the elapsed time of the timer with the provided key.
             *
             * @param key
             *
             * @returns {number|undefined}
             */
            get: function (key) {
                var end;
                if (typeof timings[key] === 'undefined') {
                    return;
                }

                // Timer is still running.
                if (typeof timings[key].start !== 'undefined') {
                    return timings[key].elapsed + (new Date()).getTime() - timings[key].start.getTime();
                }

                return timings[key].elapsed;
            },
            /**
             * Get the elapsed time of all stored timers.
             *
             * @returns {}
             */
            getAll: function () {
                var timingDiffs = {};
                for (var key in timings) {
                    timingDiffs[key] = timingObject.get(key);
                }
                return timingDiffs;
            }
        };

        return timingObject;
    })();
</script>

{% if config.google and config.google.analytics %}
    <script type="text/javascript">
        $(function () {
            $('.credits').on('click', 'a', function (e) {
                var href = $(this).attr('href');
                e.preventDefault();

                ga('send', 'event', 'credits', 'click', $(this).data('type'), {
                    hitCallback: function () {
                        document.location = href;
                    }
                });
            });
        });
    </script>
{% endif %}
{% block footerInlineScripts %}
{% endblock %}
</body>
</html>
